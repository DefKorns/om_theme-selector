#!/bin/bash
themeRandomizR() {
	local sharePath="$mountpoint/usr/share"
	local uiPath="$sharePath/ui"
	local cloverTheme="$uiPath/$sftype-$sfregion"
	local sType="$sftype"
	local statePath="$mountpoint$profilepath/$modname"
	local folderId
	folderId="$(cat "$statePath/menu")"
	local activeFolder="CLV-S-00$folderId"
	local prevTheme="none"
	local gStorage
	gStorage="$(findGameStorage)"

	case "$sftype" in
	hvcj)
		cloverTheme="$uiPath/hvc"
		sType="shonen"
		;;
	nes)
		cloverTheme="$sharePath/clover-ui"
		[ "$sfregion" = "jpn" ] && sType="hvc"
		;;
	shvc)
		cloverTheme="$uiPath/shvc"
		;;
	esac

	local fntFix="$mountpoint/media/$modname/fonts"
	local themePath="$mountpoint/media/$modname/themes/$sType"

	[ -f "$statePath/lastTheme" ] && prevTheme=$(cat "$statePath/lastTheme")
	[ ! -d "$fntFix" ] && fntFix="$rootfs/usr/share/fonts"
	local fntTitle="$fntFix/title"
	[ ! -d "$themePath" ] && themePath="$rootfs/usr/share/themes/$sType"

	find "$gStorage" -maxdepth 3 -type f -name "$activeFolder.desktop" | sort -u | while IFS= read -r desktopFile; do
		local getName
		local fullPath
		local themeMatch
		local theme="$prevTheme"
		local pID
		local parentID
		local parentName
		local hasParent

		while [ "$theme" == "$prevTheme" ]; do
			theme="$(find "$themePath" -maxdepth 1 -type d | shuf | head -n1 | xargs -n 1 basename)"
		done
		# find "/var/lib/hakchi/games/snes-eur" -maxdepth 3 -type f -name "CLV-S-00000.desktop" | sort -u | while IFS= read -r desktopFile; do
		# 	getName="$(grep -F 'Name=' "$desktopFile" | sed -r '/[Bb]ack/d;s/Name=//g;s/ /_/g' | awk '{print tolower($0)}')"
		# 	echo "$getName"
		# 	if [ -z "$getName" ]; then
		# 	echo "$getName asdasd"
		# 	fi
		# done
		cd "$gStorage" || exit
		for i in $(find . -type d -name "$activeFolder" | sed "s|^\./||"); do
		#for i in $(find . -type d -name "CLV-S-000014" | sed "s|^\./||"); do
			if [ ! "$(grep "Name=Back" "$i/$(basename "$i").desktop")" ]; then
				pID="$(dirname "$i")"
				parentID="CLV-S-00$pID"
			fi
            # done
			for w in $(find "." -maxdepth 3 -type f -name "$parentID.desktop"); do
				if [ ! "$(grep "Name=Back" "$w")" ]; then
					parentName="$(grep -F 'Name=' "$w" | sed -r 's/Name=//g;s/ /_/g' | awk '{print tolower($0)}')"
				fi
			done

		done
		getName="$(grep -F 'Name=' "$desktopFile" | sed -r '/[Bb]ack/d;s/Name=//g;s/ /_/g' | awk '{print tolower($0)}')"
		themeMatch="$(find "$themePath" -maxdepth 1 -type d | xargs -n 1 basename | grep -w "$getName")"
		hasParent="$(find "$themePath" -maxdepth 1 -type d | xargs -n 1 basename | grep -w "$parentName")"

		# if [ -z "$getName" ]; then
		if [ "$folderId" == "000" ]; then
			fullPath="$themePath/default"
			echo "default" >"$statePath/lastTheme"
		elif [ -n "$themeMatch" ]; then
			fullPath="$themePath/$getName"
			echo "$getName" >"$statePath/lastTheme"
		elif [ -n "$hasParent" ]; then
			fullPath="$themePath/$parentName"
			echo "$parentName" >"$statePath/lastTheme"
		else
			fullPath="$themePath/$theme"
			echo "$theme" >"$statePath/lastTheme"
		fi
		# echo "$fullPath" >"$statePath/activeTheme"
		local xtraStuff="$fullPath/xtras"
		local resourcesPath="$fullPath/resources"
		local spriteDir="$resourcesPath/sprites"
		local scriptsPath="$resourcesPath/scripts"

		cd "$themePath/$prevTheme" && find ./* -iname "*.wav" -type f | cut -c3- | while IFS= read -r audioFile; do
			umount "$cloverTheme/$audioFile"
		done

		if [ "$sftype" = "nes" ]; then
			[ -f "$spriteDir/hvc.png" ] && rename "$spriteDir/hvc.png" "$spriteDir/nes.png"
			[ -f "$spriteDir/hvc.json" ] && rename "$spriteDir/hvc.json" "$spriteDir/nes.json"
			[ -f "$spriteDir/colors_hvc.lua" ] && rename "$scriptsPath/colors_hvc.lua" "$scriptsPath/colors_nes.lua"
		elif [ "$sftype-$sfregion" = "nes-jpn" ]; then
			[ -f "$spriteDir/nes.png" ] && rename "$spriteDir/nes.png" "$spriteDir/hvc.png"
			[ -f "$spriteDir/nes.json" ] && rename "$spriteDir/nes.json" "$spriteDir/hvc.json"
			[ -f "$spriteDir/colors_nes.lua" ] && rename "$scriptsPath/colors_nes.lua" "$scriptsPath/colors_hvc.lua"
		fi

		cd "$fullPath/fonts" || exit
		if [ ! -f "$fntTitle.backup" ]; then
			cp -r "$fntTitle.fnt" "$fntTitle.backup"
		else
			find "$fntFix" -type f -name '*.fnt' -print0 -exec rm {} \;
		fi

		find . -maxdepth 1 -iname "*.fnt" -exec cp -r {} "$fntFix" \;

		if [ -f "$xtraStuff/thumb.png" ]; then
			find "$gStorage" -path "*_small.png*" | while IFS= read -r addThumb; do
				[ -f "$addThumb" ] && cp "$addThumb" "$addThumb"_backup && cp "$xtraStuff/thumb.png" "$addThumb"
			done
		else
			find "$gStorage" -path "*_small.png*" | while IFS= read -r delThumb; do
				[ -f "$delThumb"_backup ] && cp "$delThumb"_backup "$delThumb" && rm "$delThumb"_backup
			done
		fi

		cd "$fullPath" && find . -type f | while IFS= read -r tFile; do
			[ -n "$theme" ] && [ -f "$fullPath/$tFile" ] && mount_bind "$fullPath/$tFile" "$cloverTheme/$tFile"
		done
		cd - >/dev/ || exit
	done

}
#EOF
