#!/bin/sh
#
#  Copyright (c) 2020 DefKorns (https://defkorns.github.io/LICENSE)
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
source $mountpoint/etc/options_menu/scripts/om_functions
script_init

modtitle="themes"
omTitle="Theme Selector"
themeURL="http://hakchicloud.com/Hakchi_Themes/themes"
downloadURL="http://hakchicloud.com/Hakchi_Themes/scripts"
b_file="$mountpoint/etc/preinit.d/b8024_themeselector"
p_file="$mountpoint/etc/preinit.d/p8024_themeselector"
fontfix_file="$mountpoint/etc/preinit.d/b8025_fontfix"
chmenu_file="$root_bin/chmenu"

# Options Menu
omMod="$optionsMenu/$modtitle"
omModCommands="$omMod/commands"
omModScripts="$omMod/scripts"
omModImgs="$omMod/images" # verify
omModFnts="$omMod/fonts"  # verify
omModSub="$omMod/downloads"
omModSubCmds="$omModSub/commands"
omModSubScripts="$omModSub/scripts"
omModGen="$omMod/creator"
omModGenCmds="$omModGen/commands"
omModGenScripts="$omModGen/scripts"
omModSprites="$omModGen/sprites"
omModMario="$omModSprites/mario"
omModLuigi="$omModSprites/luigi"
omModWall="$omModSprites/wall"
omModWallN="$omModSprites/wall_near"
omModWallF="$omModSprites/wall_far"
omModPacked="$omModSprites/packed"
omModColors="$omModSprites/colors"
omModPole="$omModSprites/pole"
omModSettings="$omMod/settings"
omModSettingsCmds="$omModSettings/commands"
omModSettingsScripts="$omModSettings/scripts"
diyThemePath="$mountpoint/tmp/diy_theme"
diyResources="$diyThemePath/resources"
diyLayout="$diyResources/layout/asset/sprite"
omModLicense="$omModScripts/om_license"

thmPreview="$omModSub/images"
omThemeScript="$omModScripts/om_themescript"
omOverlayThemeScript="$omModScripts/om_overlaythmcript"
thmOverlay="$omModScripts/om_overlay"

om_themerandomizer="$state_path/om_themerandomizer"
om_audiorandomizer="$state_path/om_audiorandomizer"
om_advmusichack="$state_path/om_advmusichack"

#### SEPARATORS
omDummy="$omModCommands/c0000_0000"
subDummy="$omModSubCmds/c0000_0000"
omModSpacer="$omModCommands/c0000_separator"
omModSubSpacer="$omModSubCmds/c9998_separator"
omModGenSpacer="$omModGenCmds/c0000_separator"
#### ENABLE/DISABLE
enableDownloads="$omModCommands/c0000_download"
disableDownloads="$omModCommands/_download"
enableClear="$omModCommands/c0000_remove"
disableClear="$omModCommands/_remove"
enableSettings="$omModCommands/c0000_options"
disableSettings="$omModCommands/_options"
enableAudioSetting="$omModSettingsCmds/c0001_audiorandomizer"
disableAudioSetting="$omModSettingsCmds/_audiorandomizer"
enableAdvancedMusicHack="$omModSettingsCmds/c0001_audiorandomizerall"
disableAdvancedMusicHack="$omModSettingsCmds/_audiorandomizerall"
enableThemeSetting="$omModSettingsCmds/c0000_themerandomizer"
disableThemeSetting="$omModSettingsCmds/_themerandomizer"
enableThemeGenerator="$omModCommands/c0000_generatetheme"
disableThemeGenerator="$omModCommands/_generatetheme"
enableDiY="$omModGenCmds/c0000_apply"
disableDiY="$omModGenCmds/_apply"
enableDelDiY="$omModGenCmds/c0000_remove"
disableDelDiY="$omModGenCmds/_remove"
enablePreview="$omModGenCmds/c0000_preview"
disablePreview="$omModGenCmds/_preview"
#### ARRAYS
diy_asset_array="diy_packed diy_wall diy_wall_far diy_wall_near diy_mario diy_luigi diy_colors diy_pole" # verify
asset_arr="$omModPole/assets $omModMario/assets $omModLuigi/assets $omModWall/assets $omModWallN/assets $omModWallF/assets $omModPacked/assets $omModColors/assets"
scripts_arr="$omModPole/scripts $omModMario/scripts $omModLuigi/scripts $omModWall/scripts $omModWallN/scripts $omModWallF/scripts $omModPacked/scripts $omModColors/scripts"
cmds_arr="$omModPole/commands $omModMario/commands $omModLuigi/commands $omModWall/commands $omModWallN/commands $omModWallF/commands $omModPacked/commands $omModColors/commands"
del_arr="$asset_arr $scripts_arr $cmds_arr"

# SHARED
thm_chk="$mountpoint$profilepath/$modname/activeTheme"
system="$(echo "$s_type" | awk '{print toupper($0)}')"
theme_path="$usb_path/$modtitle/$s_type"
[ ! -d "$theme_path" ] && theme_path="$nand_path/$modtitle/$s_type"
has_theme="$(ls -1 "$theme_path/$system".*.tar.gz 2>/dev/null | wc -l)"

hasThemesToInstall() {
  if [ "$has_theme" != 0 ]; then
    for f in *.tar.gz; do
      tar -xzvf "$f" && rm -f "$f"
    done
  fi
}

clearList() {
  find "$omModCommands" "$omModScripts" -type f \
    -not -name 'om_*' -not -name 'c0000_*' \
    -not -name 'c999[0-9]_*' -not -name '_*' -print0 -exec rm {} \;
  remove "$omModSpacer"
}

clearDownloads() {
  find "$omModSubCmds" "$omModSubScripts" "$omModSub" -type f \
    -not -name 'c000[0-8]_*' -not -name 'c999[0-9]_*' \
    -not -name 'om_*' -not -name '_*' -print0 -exec rm {} \;
}

enableMenuOptions() {
  if [ ! -f "$omDummy" ]; then
    disable_cmds "Clear"
  else
    enable_cmds "Clear"
  fi

  toggleDownloads

  if [ -f "$b_file" ] || [ -f "$p_file" ]; then
    enable_cmds "Settings"
  else
    disable_cmds "Settings"
  fi

  while IFS='' read -r advThm || [ -n "$advThm" ]; do
    if grep -q "$advThm" "$thm_chk"; then
      disable_cmds "AudioSetting" "ThemeSetting" "AdvancedMusicHack"
    else
      enable_cmds "AudioSetting" "ThemeSetting" "AdvancedMusicHack"
    fi
  done <"$thmOverlay"

  if [ "$sftype" = "nes" ]; then
    disable_cmds "ThemeGenerator"
  else
    enable_cmds "ThemeGenerator"
  fi
}

themeLoader() {
  remove_regional_theme
  cd "$theme_path" && find . -mindepth 1 -maxdepth 1 -type d | xargs -n 1 basename | sort -u | while IFS= read -r thm; do
    full_path="$theme_path/$thm"
    xtras="$full_path/xtras"
    resource_path="$full_path/resources"
    sprite_path="$resource_path/sprites"
    script_path="$resource_path/scripts"
    cmd_list="$omModCommands/c0001_$thm"
    thm_script="$omModScripts/$thm"
    hadThumb="$theme_path/thumb"
    thm_title="$(echo "$thm" | sed -e 's/_/ /g' | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1))substr($i,2)}}1')"
    size="$(du -sh "$full_path" | cut -f1)"

    if [ ! -f "$full_path/info" ]; then
      echo "NAME=$thm_title [${size}b]" >"$full_path/info"
    fi

    if [ ! -f "$full_path.png" ]; then
      if [ -d "$usb_path" ]; then
        copier "$thmPreview/$thm.png" "$full_path.png"
      else
        link "$thmPreview/$thm.png" "$full_path.png"
      fi
    fi

    create "$omModSpacer"

    remove "$cmd_list"
    touch "$cmd_list"

    if [ "$sftype" = "nes" ]; then
      src="hvc"
      dest="nes"
      if [ "$sfregion" = "jpn" ]; then
        src="nes"
        dest="hvc"
      fi

      for ext in "png" "json"; do
        rename "${sprite_path}/${src}.${ext}" "${sprite_path}/${dest}.${ext}"
      done

      rename "${script_path}/colors_${src}.lua" "${script_path}/colors_${dest}.lua"
    fi

    copy "$omModLicense" "$thm_script.sh"
    if [ -f "$xtras/thumb.png" ]; then
      echo "find \"$gStorage\" -path \"*_small.png*\" | while read -r file; do
copier \"\$file\" \"\$file\"_backup 
copier \"$xtras/thumb.png\" \"\$file\"
touch \"$hadThumb\"
done" >>"$thm_script.sh"
    else
      echo "if [ -f \"$hadThumb\" ]; then
  sh $omModScripts/om_restorethumb
  rm \"$hadThumb\" 
fi" >>"$thm_script.sh"
    fi

    if grep -q -w "$thm" "$thmOverlay"; then
      echo "sed '1,2d' \"$omOverlayThemeScript\" >\"$b_file\"
  [ ! -f \"$p_file\" ] && echo themeSelector >\"$p_file\"
sed -i \"s/theme=\\\"CHANGEME\\\"/theme=\\\"${thm}\\\"/g;\" \"$b_file\"

" >>"$thm_script.sh"
    else
      echo "sed '1,2d' \"$omThemeScript\" >\"$b_file\"
  [ ! -f \"$p_file\" ] && echo themeSelector >\"$p_file\"
sed -i \"s/theme=\\\"CHANGEME\\\"/theme=\\\"${thm}\\\"/g;\" \"$b_file\"

" >>"$thm_script.sh"
    fi

    echo "sleep 1
    hakchi reboot" >>"$thm_script.sh"

    preview_image="$thmPreview/$thm.png"

    [ ! -f "$preview_image" ] && preview_image="$optionsMenu/images/default_preview.png"

    cmdName="$(sed -r 's/NAME=//g' <"$full_path/info")"
    echo "COMMAND_NAME=$cmdName
COMMAND_TYPE=INTERNAL
COMMAND_STR=sh $thm_script.sh
PREVIEW_IMAGE=$preview_image
PREVIEW_IMAGE_X=762
PREVIEW_IMAGE_Y=276
PREVIEW_IMAGE_WIDTH=0
PREVIEW_IMAGE_HEIGHT=272" >"$cmd_list"
  done
}

remove_regional_theme() {
  region_files="$omModSubCmds/c0010_snesce-$sfregion $omModSubScripts/getSnes$sfregion $omModSub/$sfregion.png $omModSub/snesce-$sfregion.png"
  for item in $region_files; do
    remove "$item"
  done
  [ -d "$theme_path/snesce-$sfregion" ] && rm -rf "$theme_path/snesce-$sfregion"
}

downloader() {
  decodepng "$omModSprites/download.png" >/dev/fb0
  cd "$omModSub" || exit
  if [ ! -e "$s_type"-list.tar.gz ]; then
    clearDownloads
    if wget -q --spider $downloadURL/"$s_type"-list.tar.gz >/dev/null 2>&1; then
      wget $downloadURL/"$s_type"-list.tar.gz
    else
      netChecker
    fi

  fi
  tar -xzf "$s_type"-list.tar.gz && rm -f *.tar.gz
  remove_regional_theme
  touch "$subDummy"
  create "$omModSubSpacer"
  usleep 1000
}

injectFile() {
  for scrpt in $@; do
    case "$scrpt" in
    chmenu)
      injected_file="$chmenu_file"
      ;;
    fontfix)
      injected_file="$fontfix_file"
      ;;
    esac

    if ! grep -q "# themeselector" "$injected_file"; then
      if [ "$scrpt" = "chmenu" ]; then
        # shellcheck disable=SC1004
        sed -i '/^overmount_games.*/a  # themeselector fix \
themeSelector \
fontFix' "/var/lib/hakchi/rootfs/bin/chmenu"
      fi

      if [ "$scrpt" = "fontfix" ]; then
        # shellcheck disable=SC1004,SC2016
        sed -i '/^fontFix_getPath().*/a  # themeselector \
  if [ -f "$mountpoint$profilepath/$modname/activeTheme" ]; then \
    active_theme=$(cat "$mountpoint$profilepath/$modname/activeTheme") \
    fontFix_getPath0 "$active_theme/fonts/$1" && return 0 \
  fi' "$mountpoint/etc/preinit.d/b8025_fontfix"
      fi
    fi
  done
}

loadThemeList() {
  if [ -n "$(ls -A "$theme_path")" ]; then
    create "$omDummy"
    if [ "$1" = "-r" ]; then
      themeLoader
    fi
  else
    remove "$omModSpacer"
    clearList
  fi
}
# verify themeGenerator function


themeGenerator() {
  echo "Packaging: DefKorns"
  echo "Category: User Interface Mod "
  echo ""
  echo "Checking selected theme files."
  echo ""
  theme_name="${1}"
  full_title="$(grep -F 'NAME=' "${omModSubCmds}/c0010_${theme_name}" | sed -e 's/.*=\(.*\)\[.*/\1/')"
  full_path="${theme_path}/${theme_name}"
  cd "${theme_path}" || exit

  theme_pkg="${themeURL}/${system}.${theme_name}.tar.gz"
  [ "${theme_name}" = "all" ] && theme_pkg="${downloadURL}/${sftype}-all"

  if wget -q --spider "${theme_pkg}" >/dev/null 2>&1; then
    echo "Downloading..."
    wget "${theme_pkg}"
    if [ "${theme_name}" = "all" ]; then
      while IFS= read -r t; do
        echo "$t"
        echo ""
        theme_pkg="${themeURL}/${system}.${t}.tar.gz"
        wget "${theme_pkg}"
        tar -xzvf "${system}.${t}.tar.gz" && remove "${system}.${t}.tar.gz"
      done <"${sftype}-all"
    fi
    [ -f "${system}.${theme_name}.tar.gz" ] && tar -xzvf "${system}.${theme_name}.tar.gz" && rm -f ./*.tar.gz
    remove "${sftype}-all"
    remove_regional_theme
    echo ""
    size="$(du -sh "${full_path}" | cut -f1)"
    echo "NAME=${full_title}[${size}b]" >"${full_path}/info"
    echo "Installation complete."
  else
    netChecker
  fi

}

find_diy_asset() {
  diy_file="${1}.png"
  diy_sprite="$omModSprites/${1}"
  asset_path="layout/asset/sprite/wallpaper"
  asset="$diy_file"
  chars="0"
  preview_w="250"
  preview_h="250"

  case "$1" in
  luigi | mario)
    diy_file="${1}_run01.png"
    asset_path="layout/asset/sprite/${1}"
    asset="*.*"
    json=""
    chars="1"
    preview_w="0"
    ;;
  packed)
    asset_path="sprites"
    ;;
  colors)
    asset_path="scripts/env"
    diy_file="$1_$sfregion.lua"
    asset="$diy_file"
    json=""
    ;;
  pole)
    diy_file="${1}01.png"
    asset="*.*"
    json=""
    chars="1"
    preview_w="0"
    ;;
  esac

  om_default_json="$omModScripts/om_${1}.json"
  paths_to_search="$diy_sprite/assets $theme_path"

  find "$diy_sprite/commands" "$diy_sprite/scripts" -type f \
    -not -name 'om_*' -not -name 'c999[0-9]_*' \
    -not -name 'c0000_*' -not -name '_*' -print0 -exec rm {} \;

  for p in $paths_to_search; do
    if [ "$(ls -A "$p")" ]; then
      cd "$p" && find . -mindepth 1 -maxdepth 1 -type d | xargs -n 1 basename | sort -u | while IFS= read -r asset_name; do

        has_sprite="0"
        full_asset_path="$p/$asset_name"
        json="$omModSprites/$1_$asset_name.json"
        resource_path="$full_asset_path/resources"

        [ -f "$full_asset_path/$diy_file" ] && has_sprite="1"
        [ -f "$resource_path/$asset_path/$diy_file" ] && has_sprite="1"

        if [ $has_sprite = "1" ] && [ "$asset_name" = "${asset_name#diy_theme}" ]; then
          cmd_file="$diy_sprite/commands/c0000_$asset_name"
          sprite_script="$diy_sprite/scripts/$asset_name"
          cmd_name="$(echo "$asset_name" | sed -e 's/_/ /g' | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1))substr($i,2)}}1')"

          if [ "$p" = "$theme_path" ]; then
            cmd_name="$(sed -r 's/NAME=//g' <"$full_asset_path/info" | awk '{$NF="";sub(/[ \t]+$/,"")}1')"
            full_asset_path="$resource_path/$asset_path"
          fi

          preview_image="$full_asset_path/$diy_file"
          echo "preview_image: $preview_image"
          echo "diy_file: $diy_file"
          temp_preview="$omModSprites/$1/assets/$1_$asset_name.png"

          [ "$chars" = "1" ] && temp_preview="$preview_image"

          if [ -n "$json" ] && [ ! -f "$temp_preview" ]; then
            decodepng "$omModSprites/loading.png" >/dev/fb0
            sed -r "s/changeme/${1}_${asset_name}/g;" "$om_default_json" >"$json"
            pngpack-upx u "$json" "$preview_image" "$omModSprites/$1/assets/"
            preview_image="$temp_preview"
            remove "$json"
            usleep 1000
          fi

          if [ ! -f "$cmd_file" ]; then
            touch "$cmd_file"
            echo "COMMAND_NAME=$cmd_name
COMMAND_TYPE=INTERNAL
COMMAND_STR=sh $sprite_script.sh
PREVIEW_IMAGE=$preview_image
PREVIEW_IMAGE_X=920
PREVIEW_IMAGE_Y=275
PREVIEW_IMAGE_WIDTH=$preview_w
PREVIEW_IMAGE_HEIGHT=$preview_h" >"$cmd_file"
          fi
          copy "$omModLicense" "$sprite_script.sh"
          echo "diySpriteSelector \"$full_asset_path\" \"$asset_path\" \"$asset\"" >>"$sprite_script.sh"
        fi
      done
    fi
  done
}

diySpriteSelector() {
  diySelectedAsset="$1"
  diyLayout="$diyResources/$2"
  diyAsset="$diyLayout"
  [ ! -d "$diyAsset" ] && mkdir -p "$diyAsset"
  find "$diySelectedAsset" -name "$3" -exec cp {} "$diyLayout" \;
  if [ ! -f "$b_file" ]; then
    sed '1,2d' "$omThemeScript" >"$b_file"
    echo themeSelector >"$p_file"
  fi
  echo ""
  echo "  ____ _____   __  _____ _   _ _____ __  __ _____    ____ ____  _____    _  _____ ___  ____  "
  echo " |  _ \\_ _\\ \\ / / |_   _| | | | ____|  \\/  | ____|  / ___|  _ \\| ____|  / \\|_   _/ _ \\|  _ \\ "
  echo " | | | | | \\ V /    | | | |_| |  _| | |\\/| |  _|   | |   | |_) |  _|   / _ \\ | || | | | |_) |"
  echo " | |_| | |  | |     | | |  _  | |___| |  | | |___  | |___|  _ <| |___ / ___ \\| || |_| |  _ < "
  echo " |____/___| |_|     |_| |_| |_|_____|_|  |_|_____|  \\____|_| \\_\\_____/_/   \\_\\_| \\___/|_| \\_\\"
  echo "                                                                                             "
  echo "                                                                                 by: DefKorns "
  echo ""
  echo ""
  echo ""
  echo "Asset applied successfully! "
  echo ""
  echo ""
  echo "Don't forget to select 'Apply custom theme' when you finish selecting your assets."

}

diyThemeChecker() {
  [ ! -d "$diyThemePath" ] && mkdir -p "$diyThemePath"
  create "$omModGenSpacer"
  if find "$diyThemePath" -type f | read -r; then
    enable_cmds "DiY" "DelDiY" "Preview"
  else
    disable_cmds "DiY" "DelDiY" "Preview"
  fi

  for cm in $cmds_arr; do
    cmd_counter=$(ls -1 "$cm" | wc -l)
    sprite_group="$(basename "$(dirname "$cm")")"

    case "$sprite_group" in
    pole | colors)
      c="c0006"
      ;;
    mario)
      c="c0002"
      ;;
    luigi)
      c="c0003"
      ;;
    wall_far)
      c="c0005"
      ;;
    wall_near)
      c="c0004"
      ;;
    packed | wall)
      c="c0001"
      ;;
    esac
    if [ "$cmd_counter" -le 2 ]; then
      # rename "$omModGenCmds/${c}_$sprite_group" "$omModGenCmds/_$sprite_group"
      # else
      rename "$omModGenCmds/_${sprite_group}" "$omModGenCmds/${c}_${sprite_group}"
    fi
  done

}

diyThemeRemover() {
  disable_cmds "DiY" "DelDiY" "Preview"
  for item in $del_arr; do
    find "$item" -type f -not -name 'c999[0-9]_*' -not -name 'om_*' -maxdepth 1 -print0 -exec rm {} \;
  done

  [ -d "$diyThemePath" ] && find "$diyThemePath" -type f -not -name 'assets_here' -print0 -exec rm {} \;

}

audioRandomizerHome() {
  if [ "$1" = "off" ]; then
    remove "$om_audiorandomizer"
    switchOff "$enableAudioSetting"
  else
    touch "$om_audiorandomizer"
    switchOn "$enableAudioSetting"
  fi
}

audioRandomizerAll() {
  if [ "$1" = "off" ]; then
    remove "$om_advmusichack"
    switchOff "$enableAdvancedMusicHack"
  else
    touch "$om_advmusichack"
    switchOn "$enableAdvancedMusicHack"
  fi
}