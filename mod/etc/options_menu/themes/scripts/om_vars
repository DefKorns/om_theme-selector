#!/bin/sh
source /etc/preinit
script_init
#
modtitle="themes"
themeURL="http://hakchicloud.com/Hakchi_Themes/themes"
downloadURL="http://hakchicloud.com/Hakchi_Themes/scripts"
b_file="$mountpoint/etc/preinit.d/b8024_themeselector"
p_file="$mountpoint/etc/preinit.d/p8024_themeselector"
fntfix_dir="$mountpoint/etc/preinit.d/b8025_fontfix"

# Options Menu
optionsMenu="$mountpoint/etc/options_menu"
omCommands="$optionsMenu/commands"
omScripts="$optionsMenu/scripts"
omMod="$optionsMenu/$modtitle"
omModCommands="$omMod/commands"
omModScripts="$omMod/scripts"
omModSpacer="$omModCommands/c0000_separator"
omModImgs="$omMod/images"
omModFnts="$omMod/fonts"
omModSub="$omMod/downloads"
omModSubCmds="$omModSub/commands"
omModSubScripts="$omModSub/scripts"
omModSubSpacer="$omModSubCmds/c9998_separator"
omModSettings="$omMod/settings"
omModSettingsCmds="$omModSettings/commands"
omModSettingsScripts="$omModSettings/scripts"


omDummy="$omModCommands/c0000_0000"
subDummy="$omModSubCmds/c0000_0000"

disableDownloads="$omModCommands/_downloadThemes"
enableDownloads="$omModCommands/c0000_downloadThemes"
disableClear="$omModCommands/_remove"
enableClear="$omModCommands/c0000_remove"
disableSettings="$omModCommands/_options"
enableSettings="$omModCommands/c0000_options"
audioSetting="$omModSettingsCmds/c0000_audiorandomizer"
themeSetting="$omModSettingsCmds/c0000_themerandomizer"


# SHARED
usb_path="$mountpoint/media/$modname"
nand_path="$rootfs/usr/share"
share_path="$mountpoint/usr/share"
ui_path="$share_path/ui"
s_type="$sftype"
root_bin="$rootfs/bin"
chmenu_dir="$root_bin/chmenu"
case "$sftype" in
hvcj)
	s_type="shonen"
	;;
nes)
	[ "$sfregion" = "jpn" ] && s_type="hvc"
	;;
esac
theme_path="$usb_path/$modtitle/$s_type"
[ ! -d "$theme_path" ] && theme_path="$nand_path/$modtitle/$s_type"

errorMsg="echo Error while connecting to server, please check your internet connection and try again. "

# functions
clearList() {
	find "$omModCommands" "$omModScripts" -type f \
		-not -name 'om_*' -not -name 'c0000_*' \
		-not -name 'c999[0-9]_*' -print0 -exec rm {} \;
	[ -f "$omModSpacer" ] && rm "$omModSpacer"
}

clearDownloads() {
	find "$omModSubCmds" "$omModSubScripts" "$omModSub" -type f \
		-not -name 'c000[0-9]_*' -not -name 'c999[0-9]_*' \
		-not -name 'om_*' -print0 -exec rm {} \;
}
noThemesNoClear() {
	if [ ! -f "$omDummy" ]; then
		mv "$enableClear" "$disableClear"
	else
		mv "$disableClear" "$enableClear"
	fi
}

rename() {
	[ -f "$1" ] && mv "$1" "$2"
}

themeLoader() {
	cd "$theme_path" && find . -mindepth 1 -maxdepth 1 -type d | xargs -n 1 basename | sort -u | while IFS= read -r thm; do
		full_path="$theme_path/$thm"
		xtras="$full_path/xtras"
		resource_path="$full_path/resources"
		sprite_path="$resource_path/sprites"
		script_path="$resource_path/scripts"
		cmd_list="$omModCommands/c0001_$thm"
		thm_script="$omModScripts/$thm"
		thm_title="$(echo "$thm" | sed -e 's/_/ /g' | awk '{for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }}1')"
		size="$(du -sh "$full_path" | cut -f1)"

		if [ ! -f "$full_path/info" ]; then
			echo "NAME=$thm_title [${size}b]" >"$full_path/info"
		fi

		if [ ! -f "$full_path.png" ]; then
			[ -f "$omModSub/$thm.png" ] && ln -sf "$omModSub/$thm.png" "$full_path.png"
		fi

		[ ! -f "$omModSpacer" ] && touch "$omModSpacer"
		sed -r "s/theme=\"CHANGEME\"/theme=\"${thm}\"/g;" "$omModScripts/om_themescript" >"$thm_script"
		[ -f "$cmd_list" ] && rm "$cmd_list"
		touch "$cmd_list"

		if [ "$sftype" = "nes" ]; then
			[ -f "$sprite_path/hvc.png" ] && rename "$sprite_path/hvc.png" "$sprite_path/nes.png"
			[ -f "$sprite_path/hvc.json" ] && rename "$sprite_path/hvc.json" "$sprite_path/nes.json"
			[ -f "$sprite_path/colors_hvc.lua" ] && rename "$script_path/colors_hvc.lua" "$script_path/colors_nes.lua"
		elif [ "$sftype-$sfregion" = "nes-jpn" ]; then
			[ -f "$sprite_path/nes.png" ] && rename "$sprite_path/nes.png" "$sprite_path/hvc.png"
			[ -f "$sprite_path/nes.json" ] && rename "$sprite_path/nes.json" "$sprite_path/hvc.json"
			[ -f "$sprite_path/colors_nes.lua" ] && rename "$script_path/colors_nes.lua" "$script_path/colors_hvc.lua"
		fi

		if [ "$thm" = "$sfregion" ]; then
			echo "#!/bin/sh
source $mountpoint/etc/options_menu/themes/scripts/om_vars
script_init
rm $b_file
rm $p_file
sleep 1
hakchi reboot" >"$thm_script.sh"
		else
			echo "#!/bin/sh
source $mountpoint/etc/options_menu/themes/scripts/om_vars
script_init" >"$thm_script.sh"
			if [ -f "$xtras/thumb.png" ]; then
				echo "sh $xtras/thumbnail.sh" >>"$thm_script.sh"
			else
				echo "sh $xtras/thumbnailfix.sh" >>"$thm_script.sh"
			fi

			echo "sed '1,2d' $thm_script > $b_file
echo themeSelector > $p_file
find $mountpoint/etc/preinit.d/ -type f -name \"*randomizR\" -exec rm -f {} \;
sleep 1
hakchi reboot" >>"$thm_script.sh"
		fi

		cmdName="$(sed -r 's/NAME=//g' <"$full_path/info")"
		echo "COMMAND_NAME=$cmdName
COMMAND_TYPE=INTERNAL
COMMAND_STR=sh $thm_script.sh
PREVIEW_IMAGE=$full_path.png
PREVIEW_IMAGE_X=590
PREVIEW_IMAGE_Y=248" >"$cmd_list"

	done
}
downloader() {
	cd "$omModSub" || exit
	echo ""
	echo "   _____ _                    ____                _           _         "
	echo "  |_   _| |_ ___ _____ ___   |    \\ ___ _ _ _ ___| |___ ___ _| |___ ___ "
	echo "    | | |   | -_|     | -_|  |  |  | . | | | |   | | . | .'| . | -_|  _|"
	echo "    |_| |_|_|___|_|_|_|___|  |____/|___|_____|_|_|_|___|__,|___|___|_|  "
	echo "                                                                        "
	echo "								Themes by:								  "
	echo "		gloone, DNA64, DefKorns, pushka, HyruleExplorer, Nysde and more	"
	echo "Packaging: DefKorns"
	echo "Category: User Interface Mod "
	echo ""
	echo "Checking available theme list"
	if [ ! -e "$s_type"-list.tar.gz ]; then
		clearDownloads
		wget -q --spider $downloadURL/"$s_type"-list.tar.gz
		if [ $? -eq 0 ]; then
			echo ""
			echo "Downloading Theme list..."
			wget $downloadURL/"$s_type"-list.tar.gz
		else
			$errorMsg
		fi
	else
		echo ""
		echo "Unpacking theme list..."
	fi
	echo ""
	echo "Updating theme list."
	tar -xzf "$s_type"-list.tar.gz && rm -f *.tar.gz
	touch "$subDummy"
	[ ! -f "$omModSubSpacer" ] && touch "$omModSubSpacer"
	echo "Update complete."
}

chMenu() {
	[ -f "$rootfs/chmenu_backup" ] && rm "$rootfs/chmenu_backup"
	[ -f "$rootfs/chmenu" ] && rm "$rootfs/chmenu"

	if [ "$(cksum "$chmenu_dir" | awk '{ print $1; }')" != "$(cksum "$omModScripts/om_chmenu" | awk '{ print $1; }')" ]; then
		cp -r "$omModScripts/om_chmenu" "$chmenu_dir"
		chmod +x "$chmenu_dir"
	fi
}

fntFix() {
	[ -f "$rootfs/fontfix" ] && rm "$rootfs/fontfix"

	if [ "$(cksum "$fntfix_dir" | awk '{ print $1; }')" != "$(cksum "$omModScripts/om_fontfix" | awk '{ print $1; }')" ]; then
		cp -r "$omModScripts/om_fontfix" "$fntfix_dir"
	fi
}
